package com.fsryan.annotationprocessor.generator.code;

import com.fsryan.forsuredb.api.BaseGetter;
import com.fsryan.forsuredb.api.Retriever;
import java.lang.IllegalArgumentException;
import java.lang.NumberFormatException;
import java.lang.String;
import java.math.BigDecimal;
import javax.annotation.Generated;

/**
 * <p>
 *   A getter API for the TestTable3Getter table
 * </p>
 */
@Generated("com.fsryan.forsuredb.annotationprocessor.FSAnnotationProcessor")
public class TestTable3Getter extends BaseGetter implements TestTable3 {
    private static final TestTable3Getter instance = new TestTable3Getter("test_table_3");

    private TestTable3Getter(String tableName) {
        super(tableName);
    }

    public static TestTable3Getter inst() {
        return instance;
    }

    /**
     * <p>
     *   retrieve the app_rating value from the {@link Retriever} passed in
     * </p>
     * @param retriever The {@link Retriever} that can pull column values from the current record
     * @return the value of column app_rating for the current record
     * @throws IllegalArgumentException when input retriever is null
     */
    public double appRating(Retriever retriever) {
        throwIfNullRetriever(retriever);
        String disambiguatedColumn = disambiguateColumn("app_rating");
        return retriever.getDouble(disambiguatedColumn);
    }

    /**
     * <p>
     *   retrieve the competitor_app_rating value from the {@link Retriever} passed in
     * </p>
     * @param retriever The {@link Retriever} that can pull column values from the current record
     * @return the value of column competitor_app_rating for the current record
     * @throws IllegalArgumentException when input retriever is null
     */
    public BigDecimal competitorAppRating(Retriever retriever) {
        throwIfNullRetriever(retriever);
        String disambiguatedColumn = disambiguateColumn("competitor_app_rating");
        if (retriever.isNull(disambiguatedColumn)) {
            return null;
        }
        String val = retriever.getString(disambiguatedColumn);
        try {
            return new BigDecimal(val);
        } catch (NumberFormatException nfe) {
            throw new IllegalArgumentException("Looks like competitor_app_rating was not a class java.math.BigDecimal; actual value = " + val, nfe);
        }
    }

    /**
     * <p>
     *   retrieve the global_id value from the {@link Retriever} passed in
     * </p>
     * @param retriever The {@link Retriever} that can pull column values from the current record
     * @return the value of column global_id for the current record
     * @throws IllegalArgumentException when input retriever is null
     */
    public long globalId(Retriever retriever) {
        throwIfNullRetriever(retriever);
        String disambiguatedColumn = disambiguateColumn("global_id");
        return retriever.getLong(disambiguatedColumn);
    }

    /**
     * <p>
     *   retrieve the login_count value from the {@link Retriever} passed in
     * </p>
     * @param retriever The {@link Retriever} that can pull column values from the current record
     * @return the value of column login_count for the current record
     * @throws IllegalArgumentException when input retriever is null
     */
    public int loginCount(Retriever retriever) {
        throwIfNullRetriever(retriever);
        String disambiguatedColumn = disambiguateColumn("login_count");
        return retriever.getInt(disambiguatedColumn);
    }
}