package com.fsryan.annotationprocessor.generator.code;

import FSTableCreator;
import java.lang.String;
import java.util.LinkedList;
import java.util.List;

/**
 * <p>
 *   This is an automatically-generated class. DO NOT modify it!
 * </p>
 * <p>
 *   TableGenerator generates the basic information about the tables
 *   you have described in your extensions of
 *   {@link FSGetApi}. It should be called as you
 *   initialize the database.
 * </p>
 * <p>
 *   You have two options when you generate the tables. First, you can accept
 *   the default authority ("com.fsryan.testapp.content") as below:
 *   <pre>
 *     {@code
 *             TableGenerator.generate();
 *     }
 *   </pre>
 *   Or you can generate the tables, specifying your authority, as below:
 *   <pre>
 *     {@code
 *             TableGenerator.generate("my.apps.content.authority");
 *     }
 *   </pre>
 * </p>
 * @author <a href="https://github.com/ryansgot/forsuredbcompiler">forsuredbcompiler</a>
 */
public class TableGenerator {
    /**
     * <p>
     *   Creates a list of {@link FSTableCreator}
     *   objects that tell the underlying routing mechanism all it needs to
     *   know in order to set up the appropriate routes to the tables.
     * </p>
     * <p>
     *   This version will use the default authority,
     *   "com.fsryan.testapp.content"
     * </p>
     * @return A list of {@link FSTableCreator} corresponding
     * to all {@link FSGetApi} extensions annotated with
     * {@link FSTable}
     * @see #generate(String)
     */
    public static List<FSTableCreator> generate() {
        return generate(null);
    }

    /**
     * <p>
     *   Creates a list of {@link FSTableCreator}
     *   objects that tell the underlying routing mechanism all it needs to
     *   know in order to set up the appropriate routes to the tables.
     * </p>
     * @param authority The authority for your database resources
     * @return A list of {@link FSTableCreator} corresponding
     * to all {@link FSGetApi} extensions annotated with
     * {@link FSTable}
     * @see #generate()
     */
    public static List<FSTableCreator> generate(String authority) {
        // provide a reasonable default authority
        authority = authority == null || authority.isEmpty() ? "com.fsryan.testapp.content" : authority;
        final List<FSTableCreator> retList = new LinkedList<FSTableCreator>();
        retList.add(new FSTableCreator(authority, com.fsryan.annotationprocessor.generator.code.TestTable.class, "test_table_data.xml", "test_table_data", com.fsryan.annotationprocessor.generator.code.TestTable2.class));
        retList.add(new FSTableCreator(authority, com.fsryan.annotationprocessor.generator.code.TestTable2.class, com.fsryan.annotationprocessor.generator.code.TestTable3.class));
        retList.add(new FSTableCreator(authority, com.fsryan.annotationprocessor.generator.code.TestTable3.class));
        return retList;
    }
}