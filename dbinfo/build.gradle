sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_7

configurations {
    apt
}

dependencies {

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    compileOnly "com.google.auto.value:auto-value:1.5"
    apt "com.google.auto.value:auto-value:1.5"

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

def generatedSources = new File(project.buildDir, "generated-src")

compileJava {
    if (project.hasProperty('intellijHack')) {
        dependsOn clean
    }
    doFirst {
        (generatedSources.exists() && generatedSources.isDirectory()) || generatedSources.mkdirs()
    }
    options.annotationProcessorPath = configurations.apt
    options.compilerArgs = ['-s', "${generatedSources}"]
}

if (project.hasProperty('intellijHack')) {
    sourceSets.main.java.srcDirs += generatedSources
}

task jacocoReport(type: JacocoReport, dependsOn: 'test') {

    group = 'Reporting'
    description = 'Generate Jacoco coverage reports after running tests.'

    executionData = files('build/jacoco/test.exec')
    sourceDirectories = files('src/main/java')
    classDirectories = fileTree(
            dir: 'build/classes',
            excludes: [
                    '**/*Test.class',
                    '**/TestData.class',
                    '**/*Test$*.class',
                    '**/*_*.class'
            ]
    )

    reports {
        xml.enabled true
        csv.enabled false
        html.enabled = true
    }
}