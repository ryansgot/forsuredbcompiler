sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_7

dependencies {
    implementation project(':dbinfo')
    implementation project(':forsuredbapi')
    compileOnly deps.jsr305

    testImplementation project(':forsuredbmodels-gson')
    testImplementation project(':testtools')
    testImplementation project(':dbinfo-testtools')
    implementation project(':sqlite-testtools')

    testImplementation deps.test.mockito
    testImplementation deps.sqlitejdbc                  // <-- run integration tests against real in-memory database
    testCompileOnly deps.jsr305

    testCompileOnly deps.test.junit4
    testImplementation deps.test.junit.jupiter.api
    testImplementation deps.test.junit.jupiter.params
    testRuntime deps.test.junit.jupiter.engine
    testRuntime deps.test.junit.vintage.engine
}

task jacocoReport(type: JacocoReport, dependsOn: 'test') {

    group = 'Reporting'
    description = 'Generate Jacoco coverage reports after running tests.'

    executionData = files('build/jacoco/test.exec')
    sourceDirectories = files('src/main/java')
    classDirectories = fileTree(
            dir: 'build/classes',
            excludes: [
                    '**/*Test.class',
                    '**/TestData.class',
                    '**/*Test$*.class',
                    '**/*_*.class'
            ]
    )

    reports {
        xml.enabled true
        csv.enabled false
        html.enabled = true
    }
}
