buildscript {
    repositories {
        jcenter()
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.3.1'
    }
}

plugins {
  id 'org.inferred.processors' version '1.2.1'
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: "jacoco"

group = 'com.fsryan'
version = '0.6.3'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

repositories {
    jcenter()
    maven {
        url "http://projectlombok.org/mavenrepo"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.google.guava:guava:19.0'
    compile 'com.google.code.gson:gson:2.5'
    compile 'com.squareup:javapoet:1.4.0'

    processor 'org.projectlombok:lombok:1.16.2'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

jacoco {
    toolVersion = "0.7.6.201602180812"
}

task jacocoReport(type: JacocoReport, dependsOn: 'test') {

    jacoco {
        version "0.7.6.201602180812"
    }

    group = 'Reporting'
    description = 'Generate Jacoco coverage reports after running tests.'

    executionData = files('build/jacoco/test.exec')
    sourceDirectories = files('/src/main/java')
    classDirectories = fileTree(
            dir: 'build/classes',
            excludes: []
    )

    reports {
        xml.enabled false
        csv.enabled false
        html.enabled = true
    }
}

String bintrayUserCredential = hasProperty('bintrayUser') ? getProperty('bintrayUser') : ''
String bintrayApiKeyCredential = hasProperty('bintrayApiKey') ? getProperty('bintrayApiKey') : ''

bintray {
    user = bintrayUserCredential
    key = bintrayApiKeyCredential

    publications = ['forsuredbcompilerPublication']
    pkg {
        repo = 'maven'
        name = 'forsuredbcompiler'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/ryansgot/forsuredbcompiler.git'
        publicDownloadNumbers = true
        version {
            name = '0.6.3'
            desc = 'Guts of the ForSureDB project, containing code to generate source and assets'
            released  = new Date()
            vcsTag = 'v0.6.3'
        }
    }
}

publishing {
    publications {
        forsuredbcompilerPublication(MavenPublication) {
            from components.java
            groupId = 'com.fsryan'
            artifactId = 'forsuredbcompiler'
            version = '0.6.3'

            Artifact sourcesJar
            Artifact javadocJar
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    failOnError = false // <-- the Builder classes generated by Lombok cause failures that can be reasonably ignored
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task release(dependsOn: bintrayUpload) {
    doLast {
        println("Huzzah! forsuredbcompiler was uploaded to bintray!")
    }
}
